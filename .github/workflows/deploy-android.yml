name: ðŸš€ Deploy Android
on:
  workflow_dispatch:

jobs:
  android-deploy:
    runs-on: macos-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up JavaÂ 17
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: 17

      - name: Configure Android SDK
        run: |
          export ANDROID_HOME=/Users/runner/Library/Android/sdk

          mkdir -p $ANDROID_HOME/cmdline-tools
          curl -fsSL https://dl.google.com/android/repository/commandlinetools-mac-9477386_latest.zip \
            -o cmdline-tools.zip
          unzip -q cmdline-tools.zip -d $ANDROID_HOME/cmdline-tools
          rm cmdline-tools.zip
          mv $ANDROID_HOME/cmdline-tools/cmdline-tools $ANDROID_HOME/cmdline-tools/latest

          export PATH=$ANDROID_HOME/cmdline-tools/latest/bin:$ANDROID_HOME/platform-tools:$ANDROID_HOME/emulator:$PATH

          yes | sdkmanager --licenses
          sdkmanager \
            "platform-tools" \
            "platforms;android-33" \
            "build-tools;33.0.2"

          echo "ANDROID_HOME=$ANDROID_HOME" >> $GITHUB_ENV
          echo "$ANDROID_HOME/cmdline-tools/latest/bin" >> $GITHUB_PATH
          echo "$ANDROID_HOME/platform-tools"          >> $GITHUB_PATH
          echo "$ANDROID_HOME/emulator"               >> $GITHUB_PATH

      - name: Install Bundler & Fastlane
        run: |
          gem install bundler
          bundle install

      - name: Decode Play Store JSON
        run: |
          echo "${{ secrets.PLAY_JSON_BASE64 }}" \
            | base64 --decode \
            > android/fastlane/production-deployment-a34193910650.json

          echo "${{ secrets.PLAY_JSON_BASE64 }}" \
            | base64 --decode \
            > android/keystores/production-deployment-a34193910650.json

      - name: Decode Android Keystore
        run: |
          echo "${{ secrets.KEYSTORE_BASE64 }}" \
            | base64 --decode \
            > android/app/upload-kstore.keystore

          echo "${{ secrets.KEYSTORE_BASE64 }}" \
            | base64 --decode \
            > android/upload-kstore.keystore
        
      - name: Decode Google Services JSON
        run: |
          echo "${{ secrets.GOOGLE_SERVICES_JSON_BASE64 }}" \
            | base64 --decode \
            > android/app/google-services.json

      - name: Create envvars.sh file
        run: |
          echo "export SOURCE_SERVER=\"https://readonly.sefaria.org/\"" >> scripts/envvars.sh
          echo "export SOURCE_UNIX_PATH=\"static/ios-export/\"" >> scripts/envvars.sh

      - name: list the Android directory & keystore
        working-directory: android
        run: |
          echo "PWD = $(pwd)"
          ls -l .
          file upload-kstore.keystore || true
          keytool -list -v \
            -keystore upload-kstore.keystore \
            -storepass "${{ secrets.STOREPASS }}" \
          || true

      - name: Run Fastlane Android testrelease
        working-directory: android
        run: |
          bundle exec fastlane android testrelease storepass:${{ secrets.STOREPASS }}

      - name: Commit version bump
        if: ${{ success() }}
        run: |
          # configure git user
          git config user.name  "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

          # stage the changed file
          git add android/app/build.gradle

          # only commit if there *is* a bump
          if git diff --cached --quiet; then
            echo "No version bump detected; skipping commit"
          else
            # grab the new versionCode for the commit message
            NEW=$(grep versionCode android/app/build.gradle | awk '{print $2}')
            git commit -m "ci: bump Android versionCode to $NEW [skip ci]"
            # push back to the same branch that triggered this workflow
            git push origin HEAD:${GITHUB_REF#refs/heads/}
          fi
